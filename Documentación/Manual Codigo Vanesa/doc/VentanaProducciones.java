// SimAS / Editor
// Ventana Producciones

package es.uco.simas.editor;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.*;

/**
 * @author vanesa
 */
public class VentanaProducciones extends javax.swing.JFrame {

    private DefaultListModel modeloProducciones ;
    private  PanelCreacionGramaticaPaso3 panelPadre ;
    private  int idxProduccionSeleccionada ;
 
    public VentanaProducciones(PanelCreacionGramaticaPaso3 ventanaPadre,  ListModel producciones) {
        
        this.idxProduccionSeleccionada =-1;
        DefaultListModel list = new DefaultListModel();
        this.modeloProducciones = list;
        int i=0;
        while(true)  {
            if(i >= producciones.getSize()) {
                break;
            }
            if(i < producciones.getSize()) {
                this.modeloProducciones.add(i,producciones.getElementAt(i));
                i = i+1;
            }
        }

        initComponents();
        this.jList1.setModel(producciones);
        this.panelPadre = ventanaPadre;
        inicializarCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxAntecedente = new javax.swing.JComboBox();
        jTextFieldConsecuente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButtonInsertar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButtonModificar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListTerm = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListNTerm = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Producciones de la Gramática");

        jPanel1.setBackground(new java.awt.Color(233, 244, 244));

        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("Nueva Produccion:");

        jLabel2.setText("Antecedente");

        jLabel4.setText("Consecuente");

        jLabel5.setText("Anadir símbolo al consecuente:");

        jButtonInsertar.setText("Insertar Produccion");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar Produccion");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/uco/simas/resources/flechaI.png"))); // NOI18N
        jButtonBorrar.setToolTipText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/uco/simas/resources/flechaD.png"))); // NOI18N

        jButtonModificar.setText("Modificar Produccion");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jLabel3.setText("No Terminales");

        jLabel7.setText("Terminales");

        jListTerm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addNTerminales(evt);
            }
        });
        jScrollPane2.setViewportView(jListTerm);

        jListNTerm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addTerminales(evt);
            }
        });
        jScrollPane3.setViewportView(jListNTerm);

        jButton1.setText("\u03b5");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonInsertar))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonModificar))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonEliminar)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel3)
                        .addGap(233, 233, 233)
                        .addComponent(jLabel7)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(55, 55, 55))
                            .addComponent(jComboBoxAntecedente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldConsecuente, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel1)))
                .addGap(169, 169, 169))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jButtonCancelar)
                .addGap(248, 248, 248)
                .addComponent(jButtonAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldConsecuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsertar)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonAceptar))
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        Boolean espacioEncontrado= null;
        String cadenaConsecuente= null;
        String espacioBlanco= null;
        int indice= 0;
        cadenaConsecuente=this.jTextFieldConsecuente.getText();
        indice=0;
        espacioEncontrado=Boolean.valueOf(false);
        espacioBlanco="";
        
        if(cadenaConsecuente.length()!= 0){
            if(cadenaConsecuente.charAt((cadenaConsecuente.length()- 1)) == 32) {
                cadenaConsecuente =cadenaConsecuente.substring(0,(cadenaConsecuente.length()- 2));

            }
            if(cadenaConsecuente.length() > 0) {
                indice=(cadenaConsecuente.length()- 1);
                while(true) {
                    if(indice<=0) {
                        break;
                    }
                    if(indice > 0) {
                        if(String.valueOf(cadenaConsecuente.charAt(indice)).equals(" ")!=false) {
                            espacioEncontrado =Boolean.valueOf(true);
                            break  ;

                        }
                        indice = indice+(-1);
                    }
                }
            }
            if(espacioEncontrado.booleanValue())   {
                this.jTextFieldConsecuente.setText(cadenaConsecuente.substring(0,indice));

            } else    {
                this.jTextFieldConsecuente.setText("");
            }
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        int conf = JOptionPane.showConfirmDialog(null, "¿Desea salir de la edicion de las producciones?", "Salir",JOptionPane.YES_NO_OPTION);

        if(conf==0)
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        if(this.panelPadre!=  null) {
            if(this.jList1.getModel().getSize() > 0) {
                this.panelPadre.asignarProducciones((DefaultListModel)this.jList1.getModel());
            }
        }
        this.dispose();
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        DefaultListModel modelo= null;
        int seleccion= 0;
        seleccion=this.jList1.getSelectedIndex();
        if(seleccion != -1) {
            modelo=(DefaultListModel)this.jList1.getModel();
            modelo.remove(seleccion);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        String produccion= null;
        int encontrado= 0;
        int i= 0;
        
        if(this.jButtonInsertar.getText().equals("Insertar Produccion")){
            if(this.jTextFieldConsecuente.getText().length() > 0) {
                encontrado=0;
                i=0;
                while(true)  {
                    if(i >= this.modeloProducciones.getSize()){
                        break;
                    }
                    if(i < this.modeloProducciones.getSize())  {
                        produccion=this.modeloProducciones.getElementAt(i).toString();
                        StringBuilder aux = new StringBuilder();
                        if(produccion.equals(aux.append(this.jComboBoxAntecedente.getSelectedItem().toString()).append(" ").append("\u2192").append(" ").append(this.jTextFieldConsecuente.getText()).append(" ").toString())!=false) {
                            encontrado=1;
                        }
                    i = i+1;
                    }
                }
                if(encontrado==0) {
                    StringBuilder prod = new StringBuilder();
                    this.modeloProducciones.add(this.modeloProducciones.getSize(),prod.append(this.jComboBoxAntecedente.getSelectedItem()).append(" ").append("\u2192").append(" ").append(this.jTextFieldConsecuente.getText()).append(" ").toString());
                    this.jList1.setModel(this.modeloProducciones);
                    this.jTextFieldConsecuente.requestFocus();
                    this.jTextFieldConsecuente.setText("");
                }
            }
        }else{
            StringBuilder prod = new StringBuilder();
            this.modeloProducciones.setElementAt(prod.append(this.jComboBoxAntecedente.getSelectedItem()).append(" ").append("\u2192").append(" ").append(this.jTextFieldConsecuente.getText()).append(" ").toString(), this.jList1.getSelectedIndex());//add(this.modeloProducciones.getSize(),prod.append(this.jComboBoxAntecedente.getSelectedItem()).append(" ").append("\u2192").append(" ").append(this.jTextFieldConsecuente.getText()).append(" ").toString());
            this.jList1.setModel(this.modeloProducciones);
            this.jTextFieldConsecuente.requestFocus();
            this.jTextFieldConsecuente.setText("");
            this.jButtonInsertar.setText("Insertar Produccion");   
        }
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        String produccion= null;
        int i= 0;
    
        if(this.jList1.getSelectedIndex()>=0) {
            produccion=this.jList1.getSelectedValue().toString();
            this.idxProduccionSeleccionada = this.jList1.getSelectedIndex();

            i=0;
            while(true)   {
                if(i >= this.jComboBoxAntecedente.getItemCount()) {
                    break;
                }
                if(i < this.jComboBoxAntecedente.getItemCount())    {
                    if(this.jComboBoxAntecedente.getItemAt(i).toString().equals(produccion.substring(0,1))!=false){
                       this.jComboBoxAntecedente.setSelectedIndex(i);
                    }
                i = i+1;
                }
            }
            this.jTextFieldConsecuente.setText(produccion.substring(4));
            this.jButtonInsertar.setText("Guardar cambios");
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void addTerminales(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTerminales
        if(this.jTextFieldConsecuente.getText().length()==0) {
            StringBuilder string = new StringBuilder();
            this.jTextFieldConsecuente.setText(string.append(this.jTextFieldConsecuente.getText()).append(this.jListNTerm.getSelectedValue()).toString());
        } else {
            //Si se ha insertado epsilon en el consecuente no se puede insertar ningun simbolo
            int i=0;
            int j=0;
            String [] aux = this.jTextFieldConsecuente.getText().split(" ");
            
            while(i < aux.length){
                if("\u03b5".equals(aux[i])){
                    JOptionPane.showConfirmDialog(null, "El símbolo \u03b5 debe aparecer solo en el consecuente de una produccion.", "Error",JOptionPane.CLOSED_OPTION);
                    j=1;
                    break;
                }
                i++;
             }
            //Si el consecuente no tiene epsilon se inserta el simbolo seleccionado
            if(j==0){   
                if(this.jTextFieldConsecuente.getText().charAt((this.jTextFieldConsecuente.getText().length()- 1)) != 32){
                    StringBuilder string2 = new StringBuilder();
                    this.jTextFieldConsecuente.setText(string2.append(this.jTextFieldConsecuente.getText()).append(" ").append(this.jListNTerm.getSelectedValue()).toString());
                } else {
                    StringBuilder string3 = new StringBuilder();
                    this.jTextFieldConsecuente.setText(string3.append(this.jTextFieldConsecuente.getText()).append(this.jListNTerm.getSelectedValue()).toString());
                }
            }
        }
    }//GEN-LAST:event_addTerminales
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(this.jTextFieldConsecuente.getText().length() == 0) {
            StringBuilder string = new StringBuilder();
            this.jTextFieldConsecuente.setText(string.append(this.jTextFieldConsecuente.getText()).append("\u03b5").toString());
        } else {
            JOptionPane.showConfirmDialog(null, "El símbolo \u03b5 debe aparecer solo en el consecuente de una produccion.", "Error",JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addNTerminales(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNTerminales
        if(this.jTextFieldConsecuente.getText().length()==0) {
            StringBuilder string = new StringBuilder();
            this.jTextFieldConsecuente.setText(string.append(this.jTextFieldConsecuente.getText()).append(this.jListTerm.getSelectedValue()).toString());
        } else {
            //Si se ha insertado epsilon en el consecuente no se puede insertar ningun simbolo
            int i=0;
            int j=0;
            String [] aux = this.jTextFieldConsecuente.getText().split(" ");
            
            while(i < aux.length){
                
                if("\u03b5".equals(aux[i])){
                    JOptionPane.showConfirmDialog(null, "El símbolo \u03b5 debe aparecer solo en el consecuente de una produccion.", "Error",JOptionPane.CLOSED_OPTION);
                    j=1;
                    break;
                }
                i++;
             }
            //Si el consecuente no tiene epsilon se inserta el simbolo seleccionado
            if(j==0){   
                if(this.jTextFieldConsecuente.getText().charAt((this.jTextFieldConsecuente.getText().length()- 1)) != 32){
                    StringBuilder string2 = new StringBuilder();
                    this.jTextFieldConsecuente.setText(string2.append(this.jTextFieldConsecuente.getText()).append(" ").append(this.jListTerm.getSelectedValue()).toString());

                } else {
                    StringBuilder string3 = new StringBuilder();
                    this.jTextFieldConsecuente.setText(string3.append(this.jTextFieldConsecuente.getText()).append(this.jListTerm.getSelectedValue()).toString());
                }
            }
        }
    }//GEN-LAST:event_addNTerminales

    private    void inicializarCombos( )  {
        ArrayList<String> listaAntecedente= null;
        ArrayList<String> listaConsecuente= null;
        DefaultComboBoxModel modeloAntecedente= null;
        DefaultComboBoxModel modeloConsecuente= null;
        DefaultListModel noTerminales= null;
        DefaultListModel terminales= null;
        int i= 0;
        terminales=this.panelPadre.getSimbolosTerminales();
        noTerminales=this.panelPadre.getSimbolosNoTerminales();
        ArrayList antecedente = new ArrayList();
        listaAntecedente=antecedente;
        ArrayList consecuente = new ArrayList();
        listaConsecuente=consecuente;
        
        while(true)  {
            if(i >= noTerminales.size())  {
                break;
            }
            if(i < noTerminales.size())  {
                listaAntecedente.add((String)noTerminales.get(i));
                i = i+1;
            }
        }
        i=0;
        while(true) {
            if(i >= noTerminales.size())   {
                break;
            }
            if(i < noTerminales.size())  {
                listaConsecuente.add((String)noTerminales.get(i));
                i = i+1;
            }
        }
        i=0;
        while(true) {
            if(i >= terminales.size())  {
                break;
            }
            if(i < terminales.size()) {
                listaConsecuente.add((String)terminales.get(i));
                i = i+1;
            }
        }
        DefaultComboBoxModel comboAntecedente = new DefaultComboBoxModel(listaAntecedente.toArray());
        modeloAntecedente=comboAntecedente;
        DefaultComboBoxModel comboConsecuente = new DefaultComboBoxModel(listaConsecuente.toArray());
        modeloConsecuente=comboConsecuente;
        this.jComboBoxAntecedente.setModel(modeloAntecedente);
        this.jListNTerm.setModel(terminales);
        this.jListTerm.setModel(noTerminales);
 }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaProducciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaProducciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaProducciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaProducciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new VentanaProducciones().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JComboBox jComboBoxAntecedente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JList jListNTerm;
    private javax.swing.JList jListTerm;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextFieldConsecuente;
    // End of variables declaration//GEN-END:variables
}
