//SimAS  /  Simulador
//Panel Nueva Simulacion Ascendente paso 6

package es.uco.simas.simulador;

import es.uco.simas.editor.FuncionError;
import es.uco.simas.editor.ParteAccion;
import es.uco.simas.editor.TablaLR;
import es.uco.simas.util.gramatica.Gramatica;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Vanesa
 */
public class PanelNuevaSimAscPaso6 extends javax.swing.JPanel {

    private VentanaSimuladorAsc ventanaPadre;
    private Gramatica gramatica;
    private DefaultTableModel modeloConjuntos ;
    private TablaLR tlr;
    int red = 0;
    
    public PanelNuevaSimAscPaso6(VentanaSimuladorAsc ventanaPadre) {
        DefaultTableModel tabla = new DefaultTableModel();
        this.modeloConjuntos = tabla;
        initComponents();                
        this.ventanaPadre = ventanaPadre;
        this.gramatica = ventanaPadre.getGramatica();
        this.jButton6.setEnabled(false);
        this.tlr = this.gramatica.getTlr();
        this.jTable1.setDefaultRenderer (Object.class, new MiRender());
        this.jTable1.setModel(this.tlr.getTAccion().getMatrizAccion());
        this.inicializarCombos(this.tlr); 
        this.jButton7.setText("Completar con Reducciones");
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setBackground(new java.awt.Color(233, 244, 244));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Incluir Funciones de Error");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton1.setText("Finalizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/uco/simas/resources/siguiente.png"))); // NOI18N
        jButton2.setEnabled(false);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/uco/simas/resources/anterior.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/es/uco/simas/resources/primero.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Pulse en la tabla para insertar la función de error:");

        jButton6.setText("Eliminar Funcion de Error");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton5)
                        .addGap(255, 255, 255)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton6)
                        .addGap(61, 61, 61)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

     private void inicializarCombos(TablaLR tlr) {
        ArrayList<String> listaCombo = new ArrayList(); 
        ArrayList<FuncionError> funError = tlr.getTAccion().getFunError();
        StringBuilder string = new StringBuilder();
        int i= 0;
          
        while(i < funError.size()) { 
            string = new StringBuilder();
            int accion;
            string = string.append(funError.get(i).getIdentificador());
            string = string.append(" - ");
            accion = funError.get(i).getAccion();
            if(accion == 1)
                string.append("Insertar un Símbolo en la Entrada: ");
            if(accion == 2)
                string.append("Borrar un Símbolo de la Entrada");
            if(accion == 3)
                string.append("Modificar un Símbolo de la Entrada: ");
            if(accion == 4)
                string.append("Insertar un Símbolo de la Pila: ");
            if(accion == 5)
                string.append("Borrar un Símbolo de la Pila");
            if(accion == 6)
                string.append("Modificar un Símbolo de la Pila: ");
            if(accion == 7)
                string.append("Terminar el análisis");
            if(accion == 1 || accion ==3 || accion ==4 || accion ==6)
                string.append(funError.get(i).getSimbolo().getNombre());
            
            listaCombo.add(string.toString());                   
            i++;            
        }        
        DefaultComboBoxModel combo = new DefaultComboBoxModel(listaCombo.toArray());                
        this.jComboBox1.setModel(combo);                
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.gramatica.setTlr(this.tlr);
        this.ventanaPadre.finalizarAsistente();
        this.ventanaPadre.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int conf = JOptionPane.showConfirmDialog(null, "¿Desea salir del asistente de la simulación de la gramática?", "Salir",JOptionPane.YES_NO_OPTION);

        if(conf==0)
          this.ventanaPadre.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int columna = this.jTable1.getSelectedColumn();
        int fila = this.jTable1.getSelectedRow();
        this.jButton6.setEnabled(false);
        ArrayList<String> term = new ArrayList<>();
        term = buscarTerm();
        int i=0;
        int x=0;
        while(i<term.size()){
            if(this.tlr.getTAccion().getMatrizAccion().getValueAt(fila, 0).toString().equals(term.get(i))){
                JOptionPane.showConfirmDialog(null, "Esta fila no se puede rellenar, debido a que el símbolo "+term.get(i)+" aparece el primero en una de las producciones.", "Salir",JOptionPane.CLOSED_OPTION);
                x=-1;
                break;
            }else
                i++;
        }
        if(x==0){       
            if(this.tlr.getTAccion().getMatrizAccion().getValueAt(fila, columna) == null){            
                String str = "E"+this.jComboBox1.getSelectedItem().toString().substring(0, 1);            
                this.tlr.getTAccion().getMatrizAccion().setValueAt(str, fila, columna);            
                this.jTable1.setDefaultRenderer (Object.class, new MiRender());
            }
            if(this.tlr.getTAccion().getMatrizAccion().getValueAt(fila, columna).toString().startsWith("E")){
                this.jButton6.setEnabled(true);
            }
            this.gramatica.setTlr(this.tlr);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private ArrayList<String> buscarTerm(){        
        ArrayList<String> term = new ArrayList<>();
        int i=0;
        while(i< this.gramatica.getPr().size()){
            if(this.gramatica.isTerminal(this.gramatica.getPr().get(i).getConsec().get(0).getNombre()))
                term.add(this.gramatica.getPr().get(i).getConsec().get(0).getNombre());
            i++;
        }
        return term;
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.ventanaPadre.cambiarPaso(5);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.ventanaPadre.cambiarPaso(1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int columna = this.jTable1.getSelectedColumn();
        int fila = this.jTable1.getSelectedRow();
        this.tlr.getTAccion().getMatrizAccion().setValueAt(null, fila, columna);
        this.jButton6.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       this.red ++;
       ParteAccion tabla = this.tlr.getTAccion();
       
       if(red % 2 != 0 ){ //red es impar: completar con reducciones
           
            int i=0;
            int j=1;
            
            while(i < tabla.getMatrizAccion().getRowCount()){            
                String reduccion="";
                j=1;
                while(j < tabla.getMatrizAccion().getColumnCount()){                  
                    if(tabla.getMatrizAccion().getValueAt(i, j) == null){
                        j++;                    
                    }else{                    
                        if(tabla.getMatrizAccion().getValueAt(i, j).toString().startsWith("r")){                        
                            reduccion = tabla.getMatrizAccion().getValueAt(i, j).toString()+"*";
                            completarTabla(i, reduccion);                        
                            break;
                        }else{
                            j++;
                        }
                    }                
                }             
                i++;
            }
            this.jButton7.setText("Eliminar Reducciones");
       }else{ //red par: Eliminar reducciones
           
           int i=0;
           int j=1;
           
           while(i < tabla.getMatrizAccion().getRowCount()){                            
                j=1;
                while(j < tabla.getMatrizAccion().getColumnCount()){   
                    if(tabla.getMatrizAccion().getValueAt(i, j)!=null){
                        if(tabla.getMatrizAccion().getValueAt(i, j).toString().contains("*")){
                            tabla.getMatrizAccion().setValueAt(null, i, j);
                        }
                    }
                    j++;
                }  
                i++;
           }
        this.jButton7.setText("Completar con Reducciones");
       }
        this.tlr.setTAccion(tabla);
        this.ventanaPadre.gramatica.setTlr(this.tlr);        
    }//GEN-LAST:event_jButton7ActionPerformed

    void completarTabla(int fila, String reduccion){
        int i=0;
        
        while(i < this.tlr.getTAccion().getMatrizAccion().getColumnCount()){
            if(this.tlr.getTAccion().getMatrizAccion().getValueAt(fila, i) == null){
                this.tlr.getTAccion().getMatrizAccion().setValueAt(reduccion, fila, i);
            }
            i++;
        }        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
