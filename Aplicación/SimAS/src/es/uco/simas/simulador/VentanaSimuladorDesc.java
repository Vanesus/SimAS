//SimAS  /  Simulador
//Ventana simulador Descendente

package es.uco.simas.simulador;

import es.uco.simas.util.gramatica.Gramatica;
import es.uco.simas.SimAS;
import es.uco.simas.util.gramatica.NoTerminal;
import es.uco.simas.util.gramatica.Produccion;
import java.util.ArrayList;

/**
 * @author Vanesa
 */
public class VentanaSimuladorDesc extends javax.swing.JFrame {

    private PanelNuevaSimDescPaso1 paso1;
    private PanelNuevaSimDescPaso2 paso2;
    private PanelNuevaSimDescPaso3 paso3;
    private PanelNuevaSimDescPaso4 paso4;
    private PanelNuevaSimDescPaso5 paso5;
       
    Gramatica gramatica;  
    ArrayList<NoTerminal> noTerminales = new ArrayList<>();
    ArrayList<Produccion> pr = new ArrayList<>();   
    
    public VentanaSimuladorDesc(Gramatica gramatica) {        
        initComponents();
        this.gramatica = gramatica;        
                       
        this.setResizable(false);                
      
        PanelNuevaSimDescPaso1 paso1 = new PanelNuevaSimDescPaso1(this);
        this.paso1 = paso1;
        
        PanelNuevaSimDescPaso3 paso3 = new PanelNuevaSimDescPaso3(this);
        this.paso3 = paso3;
        
        PanelNuevaSimDescPaso4 paso4 = new PanelNuevaSimDescPaso4(this);
        this.paso4 = paso4;                        
        
        this.getContentPane().removeAll();
        this.setContentPane(this.paso1);
        this.pack();
        this.validate();
        this.setTitle("Simulador Descendente. Paso 1 de 5");
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }
    
    public Gramatica getGramatica(){
        return this.gramatica;
    }
    
    public void setGramatica(Gramatica gramatica){
        this.gramatica = gramatica;
    }

    public ArrayList<NoTerminal> getNoTerminales() {
        return noTerminales;
    }

    public void setNoTerminales(ArrayList<NoTerminal> noTerminales) {
        this.noTerminales = noTerminales;
    }

    public ArrayList<Produccion> getPr() {
        return pr;
    }

    public void setPr(ArrayList<Produccion> pr) {
        this.pr = pr;
    }     
    
    public void cambiarPaso(int paso) {
        switch(paso){
   
            case 1:{
                  
                this.setContentPane(this.paso1);
                this.pack();
                this.setVisible(true);
                this.validate();
                this.setTitle("Simulador Descendente. Paso 1 de 5");                
                break;
                
            }
            case 2: {
                this.setTitle("Simulador Descendente. Paso 2 de 5");
                PanelNuevaSimDescPaso2 paso2 = new PanelNuevaSimDescPaso2(this);
                this.paso2 = paso2;
                this.setContentPane(this.paso2);
                this.pack();
                this.setVisible(true);
                this.validate();
                this.gramatica.generarConjPrim();          
                this.gramatica.generarConjSig();
                this.paso2.construirConjuntos(this.gramatica);
                this.setTitle("Simulador Descendente. Paso 2 de 5");
                break;

            }
            case 3:{
                this.setContentPane(this.paso3);
                this.pack();
                this.setVisible(true);
                this.validate();
                this.paso3.ConstruirTPredictiva(this.gramatica);
                this.setTitle("Simulador Descendente. Paso 3 de 5");
                break;

            }
            case 4:{
                this.setContentPane(this.paso4);
                this.pack();
                this.setVisible(true);
                this.validate();                
                this.setTitle("Simulador Descendente. Paso 4 de 5");
                break;

            }
            case 5:{
                PanelNuevaSimDescPaso5 paso5 = new PanelNuevaSimDescPaso5((VentanaSimuladorDesc)this);
                this.paso5 = paso5;
                this.setContentPane(this.paso5);
                this.pack();
                this.setVisible(true);
                this.validate();                
                this.setTitle("Simulador Descendente. Paso 5 de 5");
                break;

            }
        }
    }
    
    public void finalizarAsistente(){
        this.dispose();                  
        SimAS simas = new SimAS();
        simas.lanzarSimulador(1, this.gramatica, -1);                  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
